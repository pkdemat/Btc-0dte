//@version=6
// Created by Ravindra Elicherla (@Ravindra_PE) with inputs from @tradematicX
// Enhanced with proper trade tracking

strategy("VWAP Volume Signal with SuperTrend Strategy", shorttitle="VVS-ST-Strategy", overlay=true, 
         default_qty_type=strategy.fixed, default_qty_value=10, pyramiding=1, 
         calc_on_every_tick=false, calc_on_order_fills=false)

// Input parameters
ma_length = input.int(21, title="Volume MA Length", minval=1)
show_vwap = input.bool(true, title="Show VWAP")
show_signals = input.bool(true, title="Show Buy/Sell Signals")
lot_size = input.int(10, title="Number of Lots", minval=1)
qty_per_lot = input.int(75, title="Quantity per Lot", minval=1)

// SuperTrend parameters
st_length = input.int(10, title="SuperTrend ATR Length", minval=1)
st_factor = input.float(3.0, title="SuperTrend ATR Factor", minval=0.1, step=0.1)
show_supertrend = input.bool(true, title="Show SuperTrend")

// Calculate VWAP
vwap_value = ta.vwap(hlc3)

// Calculate volume moving average
volume_ma = ta.sma(volume, ma_length)

// SuperTrend calculation
atr = ta.atr(st_length)
hl2_val = hl2
upper_band = hl2_val + (st_factor * atr)
lower_band = hl2_val - (st_factor * atr)

var float supertrend = na
var bool trend_up = true

prev_supertrend = supertrend[1]
prev_trend_up = trend_up[1]

if na(prev_supertrend)
    supertrend := lower_band
    trend_up := true
else
    if prev_trend_up
        lower_band := lower_band > prev_supertrend ? lower_band : prev_supertrend
        supertrend := close <= lower_band ? upper_band : lower_band
        trend_up := close > lower_band
    else
        upper_band := upper_band < prev_supertrend ? upper_band : prev_supertrend
        supertrend := close >= upper_band ? lower_band : upper_band
        trend_up := close >= upper_band

// SuperTrend direction
st_bullish = trend_up
st_bearish = not trend_up

// Determine buy and sell volume
buy_volume = close > open ? volume : 0
sell_volume = close < open ? volume : 0

// Calculate moving averages of buy and sell volumes
buy_volume_ma = ta.sma(buy_volume, ma_length)
sell_volume_ma = ta.sma(sell_volume, ma_length)

// Generate signal conditions WITH SuperTrend filter
buy_condition = close > vwap_value and buy_volume > buy_volume_ma and st_bullish
sell_condition = close < vwap_value and sell_volume > sell_volume_ma and st_bearish

// Track last signal type to prevent consecutive same signals
var string last_signal = "none"

// Check for buy or sell condition (only trigger on new condition)
buy_signal_trigger = buy_condition and not buy_condition[1]
sell_signal_trigger = sell_condition and not sell_condition[1]

// Only allow signals if different from last signal type
can_buy = last_signal != "buy" and buy_signal_trigger
can_sell = last_signal != "sell" and sell_signal_trigger

// Final buy and sell signals
buy_signal = can_buy
sell_signal = can_sell

// Calculate position size
position_qty = lot_size * qty_per_lot

// ===== IMPROVED TRADE TRACKING SYSTEM =====
var int total_buy_signals = 0
var int total_sell_signals = 0
var int buy_wins = 0
var int buy_losses = 0
var int sell_wins = 0
var int sell_losses = 0
var int last_tracked_trade = -1

// Strategy execution with proper tracking
if buy_signal
    if strategy.position_size < 0  // If in short position, close it
        strategy.close("Short", comment="Exit Short")
    strategy.entry("Long", strategy.long, qty=position_qty, comment="Buy CALLS")
    alert("BUY Signal - Enter CALLS " + str.tostring(position_qty) + " units at " + str.tostring(close), alert.freq_once_per_bar_close)
    total_buy_signals += 1
    last_signal := "buy"

if sell_signal
    if strategy.position_size > 0  // If in long position, close it
        strategy.close("Long", comment="Exit Long")
    strategy.entry("Short", strategy.short, qty=position_qty, comment="Sell PUTS")
    alert("SELL Signal - Enter PUTS " + str.tostring(position_qty) + " units at " + str.tostring(close), alert.freq_once_per_bar_close)
    total_sell_signals += 1
    last_signal := "sell"

// Track completed trades - THIS IS THE KEY FIX
if strategy.closedtrades > last_tracked_trade
    for i = (last_tracked_trade + 1) to (strategy.closedtrades - 1)
        trade_profit = strategy.closedtrades.profit(i)
        trade_direction = strategy.closedtrades.entry_id(i)
        
        // Count wins and losses by direction
        if trade_direction == "Long"
            if trade_profit > 0
                buy_wins += 1
            else if trade_profit < 0
                buy_losses += 1
        
        if trade_direction == "Short"
            if trade_profit > 0
                sell_wins += 1
            else if trade_profit < 0
                sell_losses += 1
    
    last_tracked_trade := strategy.closedtrades - 1

// Calculate success rates
total_buy_closed = buy_wins + buy_losses
total_sell_closed = sell_wins + sell_losses
buy_success_rate = total_buy_closed > 0 ? (buy_wins / total_buy_closed) * 100 : 0
sell_success_rate = total_sell_closed > 0 ? (sell_wins / total_sell_closed) * 100 : 0
overall_wins = buy_wins + sell_wins
overall_losses = buy_losses + sell_losses
overall_closed = overall_wins + overall_losses
overall_success_rate = overall_closed > 0 ? (overall_wins / overall_closed) * 100 : 0

// Plot VWAP
plot(show_vwap ? vwap_value : na, color=color.blue, linewidth=2, title="VWAP")

// Plot SuperTrend
supertrend_color = st_bullish ? color.green : color.red
plot(show_supertrend ? supertrend : na, color=supertrend_color, linewidth=2, title="SuperTrend")

// Plot buy and sell signals
plotshape(show_signals and buy_signal, title="Buy Signal", location=location.belowbar, 
          style=shape.labelup, size=size.small, color=color.green, textcolor=color.white, text="BUY\nCALLS")
plotshape(show_signals and sell_signal, title="Sell Signal", location=location.abovebar, 
          style=shape.labeldown, size=size.small, color=color.red, textcolor=color.white, text="SELL\nPUTS")

// Background coloring
bgcolor(buy_signal ? color.new(color.green, 95) : sell_signal ? color.new(color.red, 95) : na)

// ===== ENHANCED STATISTICS TABLE =====
if barstate.islast and show_signals
    var table info_table = table.new(position.top_right, 2, 18, bgcolor=color.new(color.white, 10), border_width=2)
    
    // Header
    table.cell(info_table, 0, 0, "üìä STRATEGY STATS", text_color=color.white, bgcolor=color.new(color.blue, 30), text_size=size.normal)
    table.cell(info_table, 1, 0, "Value", text_color=color.white, bgcolor=color.new(color.blue, 30), text_size=size.normal)
    
    // Current Market Conditions
    table.cell(info_table, 0, 1, "Price vs VWAP", text_color=color.black, text_size=size.small)
    table.cell(info_table, 1, 1, close > vwap_value ? "Above ‚úì" : "Below ‚úó", 
               text_color=close > vwap_value ? color.green : color.red, text_size=size.small)
    
    table.cell(info_table, 0, 2, "SuperTrend", text_color=color.black, text_size=size.small)
    table.cell(info_table, 1, 2, st_bullish ? "Bullish üìà" : "Bearish üìâ", 
               text_color=st_bullish ? color.green : color.red, text_size=size.small)
    
    table.cell(info_table, 0, 3, "Last Signal", text_color=color.black, text_size=size.small)
    table.cell(info_table, 1, 3, last_signal == "buy" ? "BUY" : last_signal == "sell" ? "SELL" : "NONE", 
               text_color=last_signal == "buy" ? color.green : last_signal == "sell" ? color.red : color.gray, text_size=size.small)
    
    table.cell(info_table, 0, 4, "Position Size", text_color=color.black, text_size=size.small)
    table.cell(info_table, 1, 4, str.tostring(position_qty) + " units", text_color=color.blue, text_size=size.small)
    
    table.cell(info_table, 0, 5, "Current Position", text_color=color.black, text_size=size.small)
    current_pos_text = strategy.position_size > 0 ? "LONG (" + str.tostring(math.abs(strategy.position_size)) + ")" : strategy.position_size < 0 ? "SHORT (" + str.tostring(math.abs(strategy.position_size)) + ")" : "FLAT"
    table.cell(info_table, 1, 5, current_pos_text, 
               text_color=strategy.position_size > 0 ? color.green : strategy.position_size < 0 ? color.red : color.gray, text_size=size.small)
    
    // BUY STATISTICS
    table.cell(info_table, 0, 6, "‚îÅ‚îÅ‚îÅ BUY STATS (CALLS) ‚îÅ‚îÅ‚îÅ", text_color=color.white, bgcolor=color.new(color.green, 50), text_size=size.small)
    table.cell(info_table, 1, 6, "", bgcolor=color.new(color.green, 50))
    
    table.cell(info_table, 0, 7, "Total Buy Signals", text_color=color.black, text_size=size.small)
    table.cell(info_table, 1, 7, str.tostring(total_buy_signals), text_color=color.blue, text_size=size.small)
    
    table.cell(info_table, 0, 8, "Closed Buy Trades", text_color=color.black, text_size=size.small)
    table.cell(info_table, 1, 8, str.tostring(total_buy_closed), text_color=color.blue, text_size=size.small)
    
    table.cell(info_table, 0, 9, "Successful Buys", text_color=color.black, text_size=size.small)
    table.cell(info_table, 1, 9, str.tostring(buy_wins), text_color=color.green, text_size=size.small)
    
    table.cell(info_table, 0, 10, "Failed Buys", text_color=color.black, text_size=size.small)
    table.cell(info_table, 1, 10, str.tostring(buy_losses), text_color=color.red, text_size=size.small)
    
    table.cell(info_table, 0, 11, "Buy Win Rate", text_color=color.black, text_size=size.small)
    table.cell(info_table, 1, 11, str.tostring(buy_success_rate, "#.#") + "%", 
               text_color=buy_success_rate >= 50 ? color.green : color.red, text_size=size.normal)
    
    // SELL STATISTICS
    table.cell(info_table, 0, 12, "‚îÅ‚îÅ‚îÅ SELL STATS (PUTS) ‚îÅ‚îÅ‚îÅ", text_color=color.white, bgcolor=color.new(color.red, 50), text_size=size.small)
    table.cell(info_table, 1, 12, "", bgcolor=color.new(color.red, 50))
    
    table.cell(info_table, 0, 13, "Total Sell Signals", text_color=color.black, text_size=size.small)
    table.cell(info_table, 1, 13, str.tostring(total_sell_signals), text_color=color.blue, text_size=size.small)
    
    table.cell(info_table, 0, 14, "Closed Sell Trades", text_color=color.black, text_size=size.small)
    table.cell(info_table, 1, 14, str.tostring(total_sell_closed), text_color=color.blue, text_size=size.small)
    
    table.cell(info_table, 0, 15, "Successful Sells", text_color=color.black, text_size=size.small)
    table.cell(info_table, 1, 15, str.tostring(sell_wins), text_color=color.green, text_size=size.small)
    
    table.cell(info_table, 0, 16, "Failed Sells", text_color=color.black, text_size=size.small)
    table.cell(info_table, 1, 16, str.tostring(sell_losses), text_color=color.red, text_size=size.small)
    
    table.cell(info_table, 0, 17, "Sell Win Rate", text_color=color.black, text_size=size.small)
    table.cell(info_table, 1, 17, str.tostring(sell_success_rate, "#.#") + "%", 
               text_color=sell_success_rate >= 50 ? color.green : color.red, text_size=size.normal)
